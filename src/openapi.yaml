openapi: 3.0.1

info:
  title: test api
  version: 1.0.0

servers:
  - url: ""
    description: staging

tags:
  - name: Door

paths:
  # importer
  "/api/v1/app/doors":
    post:
      tags:
        - Door
      summary: create door
      parameters:
        - $ref: "#/components/parameters/headerAuthToken"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "some_description"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoorModel"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"

  "/api/v1/app/doors/{id}":
    get:
      tags:
        - Door
      summary: get door by id
      parameters:
        - $ref: "#/components/parameters/pathDoorId"
        - $ref: "#/components/parameters/headerAuthToken"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoorModel"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"

components:
  parameters:
    headerAuthToken:
      name: Authorization
      in: header
      required: true
      description: "Application token"
      schema:
        type: string
        example: Bearer ${App Token}
    pathDoorId:
      description: "id of data door"
      name: id
      in: path
      required: true
      schema:
        type: integer
  responses:
    200:
      description: "OK"
    204:
      description: "No Content"
    400:
      description: "Bad Request"
    401:
      description: "Unauthorized"
    403:
      description: "Forbidden"
    404:
      description: "Not Found"
    409:
      description: "Conflict"
    429:
      description: "Too Many Requests"
  schemas:
    Status:
      type: string
      enum: ["created", "uploaded", "validating", "validated", "processing", "succeeded", "failed"]
      example: "created"
    DoorModel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          example: "some_description"
        status:
          $ref: "#/components/schemas/Status"
        created_at:
          type: string
          example: "2021-09-15T10:36:30.292+08:00"
        updated_at:
          type: string
          example: "2021-09-15T10:36:30.292+08:00"
